code[0].f = INT; code[0].l = 0; code[0].a = 6;
code[1].f = LIT; code[1].l = 0; code[1].a = 0;
code[2].f = STO; code[2].l = 0; code[2].a = 3; // ram[3]<-soma==0
code[3].f = LIT; code[3].l = 0; code[3].a = 1;
code[4].f = STO; code[4].l = 0; code[4].a = 4; // cont
code[5].f = LIT; code[5].l = 0; code[5].a = 100;
code[6].f = STO; code[6].l = 0; code[6].a = 5; // 10
code[7].f = LOD; code[7].l = 0; code[7].a = 3; // push(soma)
code[8].f = LOD; code[8].l = 0; code[8].a = 4; // push(cont)
code[9].f = OPR; code[9].l = 0; code[9].a = 2; // push(soma+cont)
code[10].f = STO; code[10].l = 0; code[10].a = 3; // ram[3]<-soma
code[11].f = LOD; code[11].l = 0; code[11].a = 5; // push(10)
code[12].f = LOD; code[12].l = 0; code[12].a = 4; // push(cont)
code[13].f = OPR; code[13].l = 0; code[13].a = 8; // push(10-cont)
code[14].f = JPC; code[14].l = 0; code[14].a = 20; // goto END
code[15].f = LOD; code[15].l = 0; code[15].a = 4; // push(cont)
code[16].f = LIT; code[16].l = 0; code[16].a = 1; // push(1)
code[17].f = OPR; code[17].l = 0; code[17].a = 2; // push(cont+1)
code[18].f = STO; code[18].l = 0; code[18].a = 4; // ram[4]<-cont+1
code[19].f = JMP; code[19].l = 0; code[19].a = 7; // goto 7
code[20].f = OPR; code[20].l = 0; code[20].a = 0;
