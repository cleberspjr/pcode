  code[ 0].f = INT; code[ 0].l = 0; code[ 0].a = 5;
	code[ 1].f = CAL; code[ 1].l = 0; code[ 1].a = 5;
	code[ 2].f = LOD; code[ 2].l = 0; code[ 2].a = 10;
	code[ 3].f = STO; code[ 3].l = 0; code[ 3].a = 3;
	code[ 4].f = OPR; code[ 4].l = 0; code[ 4].a = 0;
	code[ 5].f = INT; code[ 5].l = 0; code[ 5].a = 6;
  code[ 6].f = LIT; code[ 6].l = 0; code[ 6].a = 1; 
  code[ 7].f = STO; code[ 7].l = 0; code[ 7].a = 3; // ram[3] <- fat==0
  code[ 8].f = LIT; code[ 8].l = 0; code[ 8].a = 1; 
  code[ 9].f = STO; code[ 9].l = 0; code[ 9].a = 4; 
  code[ 10].f = LIT; code[ 10].l = 0; code[ 10].a = 4; 
  code[ 11].f = STO; code[ 11].l = 0; code[ 11].a = 5; //4
  code[ 12].f = LOD; code[ 12].l = 0; code[ 12].a = 3; // push(fat)
  code[ 13].f = LOD; code[ 13].l = 0; code[ 13].a = 4; // push(cont)
  code[ 14].f = OPR; code[ 14].l = 0; code[ 14].a = 4; // pop pop push(fat, cont)
  code[ 15].f = STO; code[ 15].l = 0; code[ 15].a = 3; // ram[3] <- fat
  code[ 16].f = LOD; code[ 16].l = 0; code[ 16].a = 5; 
  code[ 17].f = LOD; code[ 17].l = 0; code[ 17].a = 4;  
  code[ 18].f = OPR; code[ 18].l = 0; code[ 18].a = 3;  
  code[ 19].f = JPC; code[ 19].l = 0; code[ 19].a = 25; 
  code[ 20].f = LOD; code[ 20].l = 0; code[ 20].a = 4; 
  code[ 21].f = LIT; code[ 21].l = 0; code[ 21].a = 1; 
  code[ 22].f = OPR; code[ 22].l = 0; code[ 22].a = 2; 
  code[ 23].f = STO; code[ 23].l = 0; code[ 23].a = 4; 
  code[ 24].f = JMP; code[ 24].l = 0; code[ 24].a = 12; 
  code[ 25].f = OPR; code[ 25].l = 0; code[ 25].a = 0; 
